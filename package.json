{
  "name": "sys-sensor",
  "private": true,
  "version": "0.1.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vue-tsc --noEmit && vite build",
    "preview": "vite preview",
    "tauri": "tauri",
    "tauri:dev": "tauri dev",
    "tauri:build": "tauri build",
    "env:check": "node -v && cargo -V && rustc -V && dotnet --version && npx tauri -V",
    "clean:proc": "powershell -NoProfile -Command \"Get-Process sys-sensor,sensor-bridge,dotnet -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue; exit 0\"",
    "bridge:publish": "dotnet publish .\\sensor-bridge -c Release -r win-x64 -p:PublishSingleFile=true -p:SelfContained=true -o .\\src-tauri\\resources\\sensor-bridge",
    "dev:all": "npm run bridge:publish && npm run tauri:dev",
    "open:bundle": "powershell -NoProfile -Command \"Invoke-Item '.\\src-tauri\\target\\release\\bundle\\'\"",
    "release:build": "npm run clean:proc && npm run bridge:publish && npm run tauri:build && npm run open:bundle",
    "clean:cargo": "powershell -NoProfile -Command \"Get-Process cargo,rustc -ErrorAction SilentlyContinue | Stop-Process -Force -ErrorAction SilentlyContinue; exit 0\"",
    "release:build:force": "npm run clean:proc && npm run clean:cargo && npm run bridge:publish && npm run tauri:build && npm run open:bundle",
    "tauri:build:nsis": "tauri build --bundles nsis",
    "release:build:nsis": "npm run clean:proc && npm run clean:cargo && npm run bridge:publish && npm run tauri:build:nsis && npm run open:bundle",
    "bundle:ls": "powershell -NoProfile -Command \"Get-ChildItem -Path .\\src-tauri\\target\\release\\bundle -File -Recurse -ErrorAction SilentlyContinue | Select-Object FullName,Length | Format-Table -AutoSize\"",
    "tauri:build:app": "tauri build",
    "release:build:app": "npm run clean:proc && npm run clean:cargo && npm run bridge:publish && npm run tauri:build:app && npm run open:bundle",
    "tauri:build:nsis:proxy": "cross-env HTTP_PROXY=http://127.0.0.1:7890 HTTPS_PROXY=http://127.0.0.1:7890 ALL_PROXY=http://127.0.0.1:7890 tauri build --bundles nsis",
    "release:build:nsis:proxy": "npm run clean:proc && npm run clean:cargo && npm run bridge:publish && npm run tauri:build:nsis:proxy && npm run open:bundle",
    "tauri:build:nsis:proxy-socks": "cross-env HTTPS_PROXY=socks5h://127.0.0.1:7890 ALL_PROXY=socks5h://127.0.0.1:7890 tauri build --bundles nsis",
    "release:build:nsis:proxy-socks": "npm run clean:proc && npm run clean:cargo && npm run bridge:publish && npm run tauri:build:nsis:proxy-socks && npm run open:bundle",
    "portable:build": "tauri build",
    "portable:stage": "powershell -NoProfile -Command \"$out='dist-portable\\sys-sensor';New-Item -ItemType Directory -Path $out -Force|Out-Null;Copy-Item .\\src-tauri\\target\\release\\sys-sensor.exe $out -Force;New-Item -ItemType Directory -Path ($out+'\\resources\\sensor-bridge') -Force|Out-Null;Copy-Item .\\src-tauri\\resources\\sensor-bridge\\* ($out+'\\resources\\sensor-bridge\\') -Recurse -Force;New-Item -ItemType Directory -Path ($out+'\\resources\\smartctl') -Force|Out-Null;if (Test-Path .\\src-tauri\\resources\\smartctl) { Copy-Item .\\src-tauri\\resources\\smartctl\\* ($out+'\\resources\\smartctl\\') -Recurse -Force };$pf1 = Join-Path $env:ProgramFiles 'smartmontools\\bin\\smartctl.exe'; if (Test-Path $pf1) { Copy-Item $pf1 ($out+'\\resources\\smartctl\\smartctl.exe') -Force }; $pf2 = Join-Path $env:ProgramFiles(x86) 'smartmontools\\bin\\smartctl.exe'; if (Test-Path $pf2) { Copy-Item $pf2 ($out+'\\resources\\smartctl\\smartctl.exe') -Force };if (Test-Path .\\dist) {Copy-Item .\\dist\\* $out -Recurse -Force};Set-Content -Path ($out+'\\README.txt') -Value '绿色便携版：双击 sys-sensor.exe 运行；如需桥接，请保证 resources/sensor-bridge/sensor-bridge.exe 存在。若遇“localhost 拒绝连接”，请确认已包含 dist 静态资源（本包已包含）。如需 SMART 采集，推荐随包内置 resources/smartctl/smartctl.exe；若缺失则使用系统 PATH 中的 smartctl。' -Encoding UTF8\"",
    "portable:zip": "powershell -NoProfile -Command \"$dest = Join-Path (Resolve-Path .\\dist-portable) 'sys-sensor-portable.zip'; if (Test-Path $dest) { Remove-Item $dest -Force }; Compress-Archive -Path .\\dist-portable\\sys-sensor\\* -DestinationPath $dest -Force\"",
    "portable:ls": "powershell -NoProfile -Command \"Get-ChildItem -Path .\\dist-portable -File -Recurse -ErrorAction SilentlyContinue | Select-Object FullName,Length | Format-Table -AutoSize\"",
    "portable:unlock": "powershell -NoProfile -Command \"$stage = Resolve-Path .\\dist-portable\\sys-sensor -ErrorAction SilentlyContinue; if ($stage) { $exe1 = Join-Path $stage 'sys-sensor.exe'; $exe2 = Join-Path $stage 'resources\\sensor-bridge\\sensor-bridge.exe'; Get-Process sys-sensor -ErrorAction SilentlyContinue | Where-Object { $_.Path -eq $exe1 } | Stop-Process -Force -ErrorAction SilentlyContinue; Get-Process sensor-bridge -ErrorAction SilentlyContinue | Where-Object { $_.Path -eq $exe2 } | Stop-Process -Force -ErrorAction SilentlyContinue; Get-Process dotnet -ErrorAction SilentlyContinue | Where-Object { $_.Path -like '*sensor-bridge*' } | Stop-Process -Force -ErrorAction SilentlyContinue; Start-Sleep -Milliseconds 300 }\"",
    "release:portable": "npm run clean:proc && npm run bridge:publish && npm run portable:build && npm run portable:stage && npm run portable:unlock && npm run portable:zip && powershell -NoProfile -Command \"Invoke-Item .\\dist-portable\"",
    "deps:webview2": "winget install -e --id Microsoft.EdgeWebView2Runtime",
    "diagnose:bridge": "powershell -NoProfile -Command \"$p='.\\dist-portable\\sys-sensor\\resources\\sensor-bridge\\sensor-bridge.exe'; if (!(Test-Path $p)) { $p='.\\src-tauri\\resources\\sensor-bridge\\sensor-bridge.exe' }; if (Test-Path $p) { & $p 2>&1 | Tee-Object -FilePath '.\\dist-portable\\sys-sensor\\bridge.log' -Append } else { Write-Host 'bridge exe not found' }\"",
    "deps:install": "npm install",
    "setup": "npm run deps:install && npm run env:check"
  },
  "dependencies": {
    "@tauri-apps/api": "^2",
    "@tauri-apps/plugin-opener": "^2",
    "vue": "^3.5.13",
    "vue-router": "^4.5.1"
  },
  "devDependencies": {
    "@tauri-apps/cli": "^2.7.1",
    "@vitejs/plugin-vue": "^5.2.1",
    "cross-env": "^7.0.3",
    "typescript": "~5.6.2",
    "vite": "^6.0.3",
    "vue-tsc": "^2.1.10"
  }
}
